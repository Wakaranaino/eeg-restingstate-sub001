# EEG Resting-State Analysis: ICA, PSD, and Bandpower Topomap (sub-001)

This repository provides a complete MATLAB pipeline for preprocessing and analyzing resting-state EEG data using EEGLAB. The script was developed and tested on [OpenNeuro dataset: sub-001](https://doi.org/10.18112/openneuro.ds004504.v1.0.8) and transforms manual preprocessing steps into a fully automated, research-grade script.

## Overview

**Goal**: Extract clean spectral features (Theta, Alpha, Beta) from EEG and visualize scalp-wide topographic distributions.

**Pipeline**:
1. Load .set EEG dataset
2. Automated artifact reduction via clean_rawdata()
3. Apply low-pass filter at 40 Hz
4. Re-reference to average
5. Run ICA (Infomax)
6. Component classification with ICLabel
7. Auto-reject artifactual components (e.g., blinks, muscle, ECG)
8. Compute PSD matrix via spectopo()
9. Generate PSD plots and scalp maps via pop_spectopo()
10. Extract bandpower (Theta: 4–7 Hz, Alpha: 8–13 Hz, Beta: 13–30 Hz)
11. Visualize as scalp topomaps
12. Save all matrices and visual outputs to /outputs/

## Files Included

| File                               | Description                                         |
|------------------------------------|-----------------------------------------------------|
| eeg_analysis_sub001_v1_3.m         | Main MATLAB analysis script (fully automated)       |
| sub001_cleaned_final_v1.3.set      | Cleaned EEGLAB dataset                              | 
| sub001_psd_matrix_v1.3.csv         | PSD matrix (all channels) via spectopo()            |
| sub001_bandpower_matrix_v1.3.csv   | Theta, Alpha, Beta power by channel                 |
| sub001_qc_log_v1.3.txt             | Per-subject QC log (ICs rejected + bandpower means) |
| sub001_summary_v1.3.mat            | Saved variables for batch/group QC analysis         |
| qc_summary_all_subjects.csv        | Master group-level QC tracking (each subject)       |
| sub001_topomap_summary_v1.3.png    | Combined figure (PSD + 3 band topomaps)             |
| README.md                          | This documentation                                  |

> Raw EEG `.set` file not included due to size. Tested on OpenNeuro sub-001 (eyes-closed).

## Sample Output

![Topomap Summary](https://github.com/Wakaranaino/eeg-restingstate-sub001/blob/main/sub001_topomap_summary_v1.2.png)  
*Topographic maps of Theta, Alpha, and Beta bandpower, plus PSD distribution*

## Requirements

- MATLAB R2022a or later
- [EEGLAB toolbox](https://sccn.ucsd.edu/eeglab/index.php)
- Signal Processing Toolbox (for `pwelch`, `bandpower`)
- Optional: clean_rawdata() plugin (EEGLAB plugin manager)

## Citation

If you use this script or adapt it for academic work, feel free to credit:

> Vermut Gao, "EEG Resting-State Pipeline – sub001 Analysis", 2025  
> [GitHub Repository Link](https://github.com/Wakaranaino/eeg-restingstate-sub001)

## Contact

For questions or collaboration, reach out via GitHub or email: `vt.gao@asu.edu`

## Dataset Attribution

This script uses EEG data from the following OpenNeuro dataset:

Andreas Miltiadous, Katerina D. Tzimourta, Theodora Afrantou, Panagiotis Ioannidis, Nikolaos Grigoriadis, Dimitrios G. Tsalikakis, Pantelis Angelidis, Markos G. Tsipouras, Evripidis Glavas, Nikolaos Giannakeas, Alexandros T. Tzallas (2024).
A dataset of EEG recordings from: Alzheimer’s disease, Frontotemporal dementia and Healthy subjects.
OpenNeuro. [Dataset] https://doi.org/10.18112/openneuro.ds004504.v1.0.8
## Version

- v1.3 – Jun 6, 2025:  
  Modularized analysis script with preprocessing switch:
  - Added `load_cleaned_set` logic to skip ICA/cleaning for reruns
  - Refactored bandpower code with `band_defs` + dynamic `bandpower_struct`
  - Generated topomaps and summary plots automatically for each band
  - Saved per-subject QC logs (.txt + .mat) and appended to a master `.csv` for multi-subject tracking
- v1.2 – Jun 3, 2025:  
  Major upgrade: research-level `clean_rawdata()`, added `spectopo()` for full PSD matrix, organized output folder
- v1.1 – Jun 2, 2025:  
  Fully automated version with `clean_rawdata()` + ICLabel rejection
- v1.0 – Initial release (Jun 1, 2025)

## License

This code is released under the MIT License. Feel free to modify and reuse with proper attribution.

